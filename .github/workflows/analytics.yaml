name: Universal Contracts Analytics

on:
  schedule:
    - cron: "0 0 * * *" # scheduled to run every day at midnight
  workflow_dispatch:

permissions:
  contents: read

jobs:
  count-contracts:
    runs-on: ubuntu-latest
    steps:
      - name: Count repos using GitHub Code Search
        id: count
        run: |
          set -euo pipefail

          # Build search query; include fork:false to exclude forks (remove if undesired)
          QUERY='@zetachain/protocol-contracts/contracts/zevm/GatewayZEVM.sol in:file fork:false'
          # URL-encode the query using jq
          ENCODED_QUERY=$(jq -rn --arg q "$QUERY" '$q|@uri')

          PER_PAGE=100
          PAGE=1
          TMP=$(mktemp)
          trap 'rm -f "$TMP"' EXIT
          : > "$TMP"

          while :; do
            RESP=$(curl -sS \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/search/code?q=${ENCODED_QUERY}&per_page=${PER_PAGE}&page=${PAGE}")

            ITEMS_LEN=$(echo "$RESP" | jq '.items | length')
            if [ -z "$ITEMS_LEN" ] || [ "$ITEMS_LEN" -eq 0 ]; then
              break
            fi

            echo "$RESP" | jq -r '.items[].repository.html_url' >> "$TMP"

            # Stop if this page returned fewer than PER_PAGE items
            if [ "$ITEMS_LEN" -lt "$PER_PAGE" ]; then
              break
            fi

            PAGE=$((PAGE+1))
          done

          COUNT=$(sort -u "$TMP" | grep -c . || true)
          echo "Repositories using GatewayZEVM.sol: $COUNT"
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"

      - name: Send count to PostHog
        if: ${{ success() && steps.count.outputs.count != '' }}
        env:
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_HOST: ${{ vars.POSTHOG_HOST }}
        run: |
          if [ -z "$POSTHOG_API_KEY" ]; then
            echo "POSTHOG_API_KEY is not set; skipping PostHog capture." >&2
            exit 0
          fi

          HOST="${POSTHOG_HOST:-https://us.i.posthog.com}"
          COUNT="${{ steps.count.outputs.count }}"

          # Build JSON with jq to ensure valid formatting and numeric count
          jq -n \
            --arg api_key "$POSTHOG_API_KEY" \
            --arg event "universal_contracts_count" \
            --arg distinct_id "github_actions/${{ github.repository }}" \
            --argjson count "$COUNT" \
            '{api_key:$api_key, event:$event, distinct_id:$distinct_id, properties:{count:$count}}' \
          | curl -s -f -X POST "$HOST/i/v0/e/" -H "Content-Type: application/json" --data-binary @-
