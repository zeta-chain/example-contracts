name: Universal Contracts Analytics

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  count-contracts:
    runs-on: ubuntu-latest
    steps:
      - name: Count repos using GitHub Code Search
        id: count
        run: |
          COUNT=$(curl -s -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/search/code?q=@zetachain/protocol-contracts/contracts/zevm/GatewayZEVM.sol+in:file" \
            | jq -r '.items[].repository.html_url' | sort -u | wc -l)
          echo "Repositories using GatewayZEVM.sol: $COUNT"
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"

      - name: Send count to PostHog
        if: ${{ success() && steps.count.outputs.count != '' }}
        env:
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          # Optional: set org/repo Variable POSTHOG_HOST to override region (e.g. https://eu.i.posthog.com)
          POSTHOG_HOST: ${{ vars.POSTHOG_HOST }}
        run: |
          if [ -z "$POSTHOG_API_KEY" ]; then
            echo "POSTHOG_API_KEY is not set; skipping PostHog capture." >&2
            exit 0
          fi

          HOST="${POSTHOG_HOST:-https://us.i.posthog.com}"
          COUNT="${{ steps.count.outputs.count }}"

          # Build JSON with jq to ensure valid formatting and numeric count
          jq -n \
            --arg api_key "$POSTHOG_API_KEY" \
            --arg event "universal_contracts.count_contracts" \
            --arg distinct_id "github_actions/${{ github.repository }}" \
            --arg repo "${{ github.repository }}" \
            --arg workflow "${{ github.workflow }}" \
            --arg run_id "${{ github.run_id }}" \
            --arg sha "${{ github.sha }}" \
            --argjson count "$COUNT" \
            '{api_key:$api_key, event:$event, distinct_id:$distinct_id, properties:{count:$count, repository:$repo, workflow:$workflow, run_id:$run_id, sha:$sha}}' \
          | curl -s -f -X POST "$HOST/i/v0/e/" -H "Content-Type: application/json" --data-binary @-
